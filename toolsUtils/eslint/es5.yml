---
  rules:

    # Possible Errors
    for-direction: off
    no-compare-neg-zero: error
    no-cond-assign: [error, except-parens]
    no-console: error
    no-constant-condition:
      - error
      -
        checkLoops: true
    no-control-regex: error
    no-debugger: error
    no-dupe-args: error
    no-dupe-keys: error
    no-duplicate-case: error
    no-empty-character-class: error
    no-empty:
      - error
      -
        allowEmptyCatch: false
    no-ex-assign: error
    no-extra-boolean-cast: error
    no-extra-parens:
      - error
      - all
      -
        conditionalAssign: false
        returnAssign: false
        nestedBinaryExpressions: false
    no-extra-semi: error
    no-func-assign: error
    no-inner-declarations: [error, functions]
    no-invalid-regexp: error
    no-irregular-whitespace:
      - error
      -
        skipStrings: true
        skipComments: true
        skipRegExps: true
        skipTemplates: true
    no-obj-calls: error
    no-prototype-builtins: error
    no-regex-spaces: error
    no-sparse-arrays: error
    no-unexpected-multiline: error
    no-unreachable: error
    no-unsafe-finally: error
    no-unsafe-negation: warn
    use-isnan: error
    valid-jsdoc: off
    valid-typeof:
      - error
      -
        requireStringLiterals: true

    # Best Practices
    accessor-pairs:
      - error
      -
        setWithoutGet: true
        getWithoutSet: false
    array-callback-return: error
    block-scoped-var: warn
    complexity: off
    consistent-return:
      - warn
      -
        treatUndefinedAsUnspecified: false
    curly: [warn, multi, consistent]
    default-case: error
    dot-location: [warn, property]
    dot-notation:
      - warn
      -
        allowKeywords: true
    eqeqeq:
      - error
      - always
      -
        null: never
    guard-for-in: warn
    no-alert: error
    no-caller: error
    no-div-regex: error
    no-else-return: warn
    no-empty-function: warn
    no-eq-null: off
    no-eval:
      - error
      -
        allowIndirect: false
    no-extend-native: error
    no-extra-bind: error
    no-extra-label: off
    no-fallthrough: warn
    no-floating-decimal: warn
    no-global-assign: error
    no-implicit-coercion: off
    no-implicit-globals: error
    no-implied-eval: error
    no-invalid-this: off
    no-iterator: error
    no-labels:
      - error
      -
        allowLoop: false
        allowSwitch: false
    no-lone-blocks: error
    no-loop-func: warn
    no-magic-numbers: off
    no-multi-spaces: warn
    no-multi-str: error
    no-new-func: warn
    no-new-wrappers: error
    no-new: error
    no-octal-escape: error
    no-octal: error
    no-param-reassign:
      - warn
      -
        props: false
    no-proto: error
    no-redeclare:
      - error
      -
        builtinGlobals: true
    no-restricted-properties: off
    no-return-assign: [error, except-parens]
    no-script-url: error
    no-self-assign:
      - error
      -
        props: true
    no-self-compare: error
    no-sequences: warn
    no-throw-literal: error
    no-unmodified-loop-condition: warn
    no-unused-expressions:
      - error
      -
        allowShortCircuit: true
        allowTernary: true
    no-unused-labels: off
    no-useless-call: error
    no-useless-concat: error
    no-useless-escape: error
    no-useless-return: error
    no-void: error
    no-warning-comments: off
    no-with: error
    radix: [error, always]
    vars-on-top: warn
    wrap-iife: [error, inside]
    yoda: [warn, never]

    # Strict Mode
    strict: [error, safe]

    # Variables
    init-declarations: off
    no-catch-shadow: error
    no-delete-var: error
    no-label-var: off
    no-restricted-globals: off
    no-shadow-restricted-names: error
    no-shadow:
      - error
      -
        builtinGlobals: true
        hoist: all
    no-undef-init: error
    no-undef:
      - error
      -
        typeof: true
    no-undefined: off
    no-unused-vars:
      - error
      -
        vars: all
        args: after-used
        caughtErrors: none
    no-use-before-define:
      - error
      -
        functions: true
        variables: true

    # CommonJS
    global-require: warn
    no-mixed-requires:
      - warn
      -
        grouping: false
        allowCall: false
    no-new-require: error
    no-path-concat: error
    no-process-env: warn
    no-restricted-modules: off

    # Stylistic Issues
    array-bracket-newline:
      - warn
      -
        multiline: true
    array-bracket-spacing:
      - warn
      - never
      -
        singleValue: false
        objectsInArrays: false
        arraysInArrays: false
    array-element-newline: off
    block-spacing: [warn, always]
    brace-style:
      - warn
      - 1tbs
      -
        allowSingleLine: true
    camelcase:
      - warn
      -
        properties: always
    capitalized-comments: [warn, never]
    comma-dangle: [warn, always-multiline]
    comma-spacing:
      - warn
      -
        before: false
        after: true
    comma-style: [warn, last]
    computed-property-spacing: [warn, never]
    consistent-this: [warn, self]
    eol-last: [warn, always]
    func-call-spacing:
      - warn
      - never
    func-name-matching:
      - warn
      - always
      -
        includeCommonJSModuleExports: false
    func-names: [warn, as-needed]
    func-style: off
    id-blacklist: off
    id-length: off
    id-match: off
    indent:
      - warn
      - 2
      -
        SwitchCase: 1
        VariableDeclarator: 1
        outerIIFEBody: 1
        MemberExpression: 1
        FunctionDeclaration:
          parameters: first
          body: 1
        FunctionExpression:
          parameters: first
          body: 1
        CallExpression:
          arguments: 1
        ArrayExpression: 1
        ObjectExpression: 1
    key-spacing:
      - warn
      -
        beforeColon: false
        afterColon: true
        mode: strict
    keyword-spacing:
      - warn
      -
        before: true
        after: true
    line-comment-position: off
    linebreak-style: [warn, unix]
    lines-around-comment: off
    max-depth: off
    max-len: off
    max-lines: off
    max-nested-callbacks: off
    max-params: off
    max-statements-per-line: off
    max-statements: off
    multiline-ternary: [warn, always]
    new-cap:
      - error
      -
        newIsCap: true
        capIsNew: true
        capIsNewExceptionPattern: '^Immutable\..'
        properties: true
    new-parens: warn
    newline-per-chained-call:
      - warn
      -
        ignoreChainWithDepth: 4
    no-array-constructor: error
    no-bitwise: off
    no-continue: off
    no-inline-comments: off
    no-lonely-if: error
    no-mixed-operators:
      - warn
      -
        allowSamePrecedence: true
    no-mixed-spaces-and-tabs: warn
    no-multi-assign: off
    no-multiple-empty-lines:
      - warn
      -
        max: 2
        maxEOF: 0
        maxBOF: 1
    no-negated-condition: warn
    no-nested-ternary: warn
    no-new-object: error
    no-plusplus: off
    no-restricted-syntax: off
    no-tabs: warn
    no-ternary: off
    no-trailing-spaces:
      - warn
      -
        skipBlankLines: false
        ignoreComments: false
    no-underscore-dangle:
      - warn
      -
        allowAfterThis: true
    no-unneeded-ternary:
      - error
      -
        defaultAssignment: false
    no-whitespace-before-property: warn
    nonblock-statement-body-position: [warn, below]
    object-curly-newline:
      - warn
      -
        consistent: true
    object-curly-spacing:
      - warn
      - never
      -
        arraysInObjects: false
        objectsInObjects: false
    object-property-newline:
      - warn
      -
        allowMultiplePropertiesPerLine: true
    one-var-declaration-per-line: [warn, always]
    one-var:
      - warn
      -
        var: always
    operator-assignment: [warn, always]
    operator-linebreak: [warn, before]
    padded-blocks:
      - warn
      -
        blocks: never
        switches: never
    padding-line-between-statements:
      - warn
      - {blankLine: always, prev: var, next: block-like}
      - {blankLine: always, prev: let, next: block-like}
      - {blankLine: always, prev: const, next: block-like}
      - {blankLine: always, prev: directive, next: '*'}
    quote-props:
      - error
      - as-needed
      -
        keywords: true
        unnecessary: true
        numbers: true
    quotes:
      - warn
      - single
      -
        avoidEscape: true
    require-jsdoc: off
    semi:
      - error
      - always
      -
        omitLastInOneLineBlock: false
    semi-spacing:
      - warn
      -
        before: false
        after: true
    semi-style: off
    sort-keys: off
    sort-vars: off
    space-before-blocks: [warn, always]
    space-before-function-paren: [warn, never]
    space-in-parens: [warn, never]
    space-infix-ops:
      - error
      -
        int32Hint: false
    space-unary-ops:
      - warn
      -
        words: true
        nonwords: false
    spaced-comment:
      - warn
      - always
      -
        block:
          balanced: true
    switch-colon-spacing:
      - warn
      -
        after: true
        before: false
    unicode-bom: [error, never]
    wrap-regex: warn
